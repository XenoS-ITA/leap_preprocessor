{
  "version": 3,
  "sources": ["../src/errorListener.ts"],
  "sourcesContent": ["import { CommonToken, ErrorListener } from 'antlr4';\r\n\r\ntype LeapSyntaxError = { line: number; column: number; message: string; offendingSymbol: any };\r\n\r\nclass ExtendedErrorListener extends ErrorListener<CommonToken> {\r\n    errors: Array<LeapSyntaxError>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.errors = [];\r\n    }\r\n\r\n    syntaxError(recognizer: any, offendingSymbol: CommonToken, line: number, column: number, msg: string, e: any) {\r\n        const error = {\r\n            line,\r\n            column,\r\n            message: msg,\r\n            offendingSymbol,\r\n        };\r\n\r\n        this.errors.push(error);\r\n    }\r\n\r\n    getErrors() {\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport { LeapSyntaxError, ExtendedErrorListener };"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,2BAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA2C,kBAIrCF,EAAN,cAAoC,eAA2B,CAG3D,aAAc,CACV,MAAM,EACN,KAAK,OAAS,CAAC,CACnB,CAEA,YAAYG,EAAiBC,EAA8BC,EAAcC,EAAgBC,EAAaC,EAAQ,CAC1G,IAAMC,EAAQ,CACV,KAAAJ,EACA,OAAAC,EACA,QAASC,EACT,gBAAAH,CACJ,EAEA,KAAK,OAAO,KAAKK,CAAK,CAC1B,CAEA,WAAY,CACR,OAAO,KAAK,MAChB,CACJ",
  "names": ["errorListener_exports", "__export", "ExtendedErrorListener", "__toCommonJS", "import_antlr4", "recognizer", "offendingSymbol", "line", "column", "msg", "e", "error"]
}
